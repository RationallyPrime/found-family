[project]
name = "memory-palace"
version = "0.1.0"
description = "Personal memory palace with persistent ontology"
requires-python = ">=3.13"
dependencies = [
    "fastapi>=0.115.0",
    "uvicorn>=0.34.0",
    "pydantic>=2.10.0",
    "pydantic-ai>=0.1.0",
    "neo4j>=5.28.0",
    "voyageai>=0.3.0",
    "httpx>=0.28.0",
    "python-dotenv>=1.0.0",
    "structlog>=25.0.0",
    "apscheduler>=3.10.0",
    "fastapi-mcp>=0.1.0",
    # ML dependencies (add as needed)
    # "umap-learn>=0.5.0",
    # "hdbscan>=0.8.0",
    # "bertopic>=0.16.0",
    # "sentence-transformers>=3.0.0",
    "logfire>=4.1.0",
    "ty>=0.0.1a16",
    "pydantic-settings>=2.10.1",
    "opentelemetry-instrumentation-botocore>=0.57b0",
    "opentelemetry-instrumentation-fastapi>=0.57b0",
    "opentelemetry-instrumentation-httpx>=0.57b0",
    "opentelemetry-instrumentation-requests>=0.57b0",
    "opentelemetry-instrumentation-sqlite3>=0.57b0",
    "opentelemetry-instrumentation-urllib>=0.57b0",
    "jose>=1.0.0",
    "python-jose[cryptography]>=3.5.0",
    "python-multipart>=0.0.20",
    "passlib>=1.7.4",
    "scikit-learn>=1.3.0",
    "numpy>=1.24.0",
]

[project.optional-dependencies]
dev = ["pytest>=8.0.0", "pytest-asyncio>=0.26.0", "ruff>=0.9.0", "mypy>=1.13.0"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
line-length = 120
target-version = "py313"
src = ["src"]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG", # flake8-unused-arguments
    "SIM", # flake8-simplify
    "RUF", # Ruff-specific rules
]
ignore = [
    "B008", # Do not perform function call in argument defaults
    "E501", # Line too long (handled by formatter)
]
fixable = ["ALL"]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"] # Allow unused imports in __init__
"test_*.py" = ["ARG"]    # Allow unused arguments in tests

[tool.ruff.lint.isort]
known-first-party = ["memory_palace"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "lf"
docstring-code-format = true

[tool.ty]
# Type checking with ty (Astral's new type checker)

[tool.ty.environment]
python-version = "3.13"
root = ["src"]
extra-paths = ["src"]

[tool.ty.src]
include = ["src/**/*.py"]
exclude = ["__pycache__", ".venv", "build", "dist", "**/tests/**"]
